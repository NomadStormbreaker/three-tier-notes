pipeline {
    agent {
        docker {
            image 'node:14' // or another Node.js version with the necessary glibc
            args '-v /var/lib/jenkins/workspace:/workspace' // Mount the workspace
        }
    }

    environment {
        DOCKER_IMAGE_NAME = 'notes-backend'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_creds')
        SONAR_URL = "http://54.234.119.1:9000"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                    sonar-scanner -Dsonar.projectKey=backend-project-key \
                                  -Dsonar.sources=. \
                                  -Dsonar.host.url=${SONAR_URL} \
                                  -Dsonar.login=$SONAR_AUTH_TOKEN
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh '''
                    chmod +x ../scripts/build_and_push.sh
                    DOCKERHUB_USERNAME=${DOCKERHUB_CREDENTIALS_USR} \
                    DOCKERHUB_PASSWORD=${DOCKERHUB_CREDENTIALS_PSW} \
                    BUILD_NUMBER=${BUILD_NUMBER} \
                    ../scripts/build_and_push.sh
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Docker image built and pushed successfully.'
        }
        failure {
            echo 'Failed to build or push the Docker image.'
        }
    }
}
